pipeline{
    agent any

    parameters {
        choice(name: 'BRANCH_NAME', choices: ['main', 'dev'], description: 'Choose the environment to deploy')
        string(name: 'IMAGE_TAG', defaultValue: 'v1.0', description: 'Docker image tag')
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    echo "Checking out branch ${params.BRANCH_NAME}"
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: "*/${params.BRANCH_NAME}"]],
                        userRemoteConfigs: [[
                            url: 'https://github.com/mateineaga/lab3-epam-jenkins.git',
                            credentialsId: 'GitCredentials'  // Folosim GitCredentials pentru autentificare
                        ]]
                    ])
                }
            }
        }

        stage('Build'){
            steps{
                nodejs('node'){
                    echo 'Building application.....'
                    sh 'npm install'
                }
            }
        }

        stage('Test'){
            steps{
                nodejs('node'){
                    echo 'Testing the application.....'
                    sh 'npm test'
                }
            }
        }

        stage('Build docker image'){
            steps{
                script {
                    sh '''#!/bin/bash
                    if [[ "${BRANCH_NAME}" == "main" ]]; then
                        cp src/logo.svg main_logo.svg
                        echo "Building the image for branch: ${BRANCH_NAME}"
                        echo "Building nodemain:${IMAGE_TAG}"

                        docker build -t "nodemain:${IMAGE_TAG}" -f Dockerfile .
                    else
                        cp src/logo.svg dev_logo.svg
                        echo "Building the image for branch: ${BRANCH_NAME}"
                        echo "Building nodedev:${IMAGE_TAG}"

                        docker build -t nodedev:${IMAGE_TAG} -f Dockerfile .
                    fi
                    '''
                }
            }
        }

        stage('Deploy docker image'){
            steps{
                script {
                    sh '''#!/bin/bash
                    if [[ "${BRANCH_NAME}" == "main" ]]; then

                        echo "Cleaning the running&stopped containers!"
                        docker stop nodemain || true
                        docker rm nodemain || true

                        echo "Running image nodemain:${IMAGE_TAG}"
                        echo "Port: 3000"

                        docker run -d --expose 3000 -p 3000:3000 --name nodemain nodemain:${IMAGE_TAG}
                    else
                        echo "Cleaning the running&stopped containers!"

                        docker stop nodedev || true
                        docker rm nodedev || true

                        echo "Running image nodedev:${IMAGE_TAG}"
                        
                        echo "Port: 3001"

                        docker run -d --expose 3001 -p 3001:3000 --name nodedev nodedev:${IMAGE_TAG}
                    fi
                    '''
                }
            }
        }

    }
}